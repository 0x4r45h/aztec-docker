# Template for simulating a provernet-like setup using docker-compose, currently unused except for development or testing.
# Spins up an aztec node with a sequencer, a transactions bot, and a prover node with a separate prover agent.
# Logs latest block numbers every 10 seconds.
name: aztec-provernet
services:
  # Prover node that listens for unproven blocks on L1, and generates and submits block proofs
  # Requires one or more agents to be connected for actually generating proofs
  # Fetches individual tx proofs from the aztec-node directly
  aztec-prover:
    image: "aztecprotocol/${IMAGE:-aztec:master}"
    ports:
      - "${PROVER_NODE_PORT}:80"
    environment:
      AZTEC_PORT: 80
      LOG_LEVEL: verbose
      DATA_DIRECTORY: /data
      ARCHIVER_POLLING_INTERVAL: 1000
      L1_CHAIN_ID: 677692
      IS_DEV_NET: true
      ETHEREUM_HOST: https://provernet-mainnet-fork.aztec.network:8545/${APIKEY}
      TX_PROVIDER_NODE_URL: https://api.aztec.network/provernet/aztec-node-1/${APIKEY}
      PROVER_REAL_PROOFS: true
      PROVER_AGENT_ENABLED: false
      PROVER_PUBLISHER_PRIVATE_KEY: ${PROVER_PRIVATE_KEY}
      PROVER_NODE_MAX_PENDING_JOBS: 32
      PROVER_ID: ${PROVER_ADDRESS}
      LOG_JSON: true
    volumes:
      - prover_node_data:/data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:80/status" ]
      interval: 3s
      timeout: 30s
      start_period: 10s
    command: [ "start", "--prover-node", "--archiver" ]
    restart: on-failure
    networks:
      aztec:

  # Prover agent that connects to the prover-node for fetching proving jobs and executing them
  # Multiple instances can be run, or PROVER_AGENT_CONCURRENCY can be increased to run multiple workers in a single instance
  prover-agent:
    image: "aztecprotocol/${IMAGE:-aztec:master}"
    environment:
      LOG_JSON: true
      LOG_LEVEL: verbose
      PROVER_REAL_PROOFS: true
      AZTEC_NODE_URL: ${AZTEC_PROVER_NODE_URL:-http://aztec-prover}
      SKIP_PORT_ASSIGNMENT: 1
      PROVER_AGENTS: 1
    command: [ "start", "--prover" ]
    restart: on-failure
    networks:
      aztec:

volumes:
  prover_node_data:
networks:
  aztec: